{"version":3,"sources":["../../src/components/defaultTheme.js","../../src/helpers/formatDate.js","../../src/helpers/mergeDeep.js","../../src/components/styles.js","../../src/helpers/isValidDate.js","../../src/helpers/strOps.js","../../src/components/SelectDate.js","../../src/helpers/uidMap.js","../../src/components/Calendar.styles.js","../../src/components/Calendar.js","../../src/helpers/calendar/keyControl.js","../../src/index.js","../../src/helpers/calendar/defaultDate.js","App.js","index.js"],"names":["primaryDark","activeBg","defaultTheme","calendar","border","margin","background","zIndex","icon","color","backgroundColor","borderLeft","padding","width","height","heading","days","titles","selected","hover","dateInput","wrap","outline","input","fontSize","inputHint","dateFromString","date","dateStr","Date","year","month","e","console","isObject","item","Array","mergeDeep","target","source","output","Object","key","DatePicker","styled","props","InputLi","IconCalendar","CalendarUl","DateInput","InputHint","isValidDate","str","isValid","max","strMod","fDate","lDate","cDate","KEYCODE","SelectDate","format","ariaLabelFormatHint","uid","Math","defaultFormatHintAriaLabel","initDate","initialDate","hasSelected","useState","useEffect","onInputChange","value","setDateInput","checkValue","num","parseInt","isNaN","submitInputDate","onInvalidDate","message","details","dateRange","handleSelectDate","fnsFormat","inputString","test","values","v","update","i","onInputFocus","role","onKeyPress","onKeyUp","id","inputId","tabIndex","onClick","onFocus","onBlur","onChange","onKeyDown","onInputKeyDown","type","charCode","toggleCalendar","faCalendar","Calendar","Title","Icons","IconWrap","Month","DaysOfWeek","Cell","ariaDays","ariaMonths","calendarShown","focus","previousDate","keyControl","setFocusDay","maxRangeArr","minRangeArr","maxYear","minYear","maxMonth","minMonth","getButtonFromDate","document","focusSelectedDate","prevDate","selectedDayButton","selectedDate","handleKeyPress","callback","setPreviousMonth","previousMonth","subMonths","previousYearVal","getYear","previousMonthVal","getMonth","startOfPrevMonthVal","startOfMonth","setSelectedDate","setNextMonth","nextMonth","addMonths","nextYearVal","nextMonthVal","startOfNextMonthVal","setPreviousYear","previousYear","subYears","setNextYear","nextYear","addYears","setPreviousDay","previousDay","subDays","setNextDay","nextDay","addDays","setPreviousWeek","previousWeek","subWeeks","setNextWeek","nextWeek","addWeeks","setDatePreviousMonth","subMonth","setDateNextMonth","addMonth","setDatePreviousYear","subYear","setDateNextYear","addYear","setMonthStart","setMonthEnd","endOfMonth","makeKeyControl","focusDay","handleDayKeyPress","keyCode","control","closeCalendar","makeWeek","startWeekday","curYear","toDate","curMonth","inMinYear","inMaxYear","returnArr","dayNum","weekNum","validDay","setDate","getWrittenDay","day","dateString","dateObj","dayIdx","getDay","monthIdx","writtenMonth","previousYearKeyPress","faAngleDoubleLeft","faAngleLeft","faAngleRight","faAngleDoubleRight","title","daysInMonth","getDaysInMonth","weeksInMonth","getWeeksInMonth","weeks","generateMonth","className","week","getDate","isEqual","$selected","handleDateSelection","$empty","defaultDate","returnDate","compareAsc","getDefaultDate","dateFormatted","formatDate","setShowCalendar","onSelect","setHasSelected","themeMod","theme","placeholder","formatHint","showCalendar","App","setDateString","setInitialDate","error","setError","setTimeout","min","onSubmit","preventDefault","style","position","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f0260ff8.chunk.js","sourcesContent":["const primaryDark = '#1E4147'\nconst activeBg = '#AAC789'\n\nexport const defaultTheme = {\n  calendar: {\n    border: `2px solid ${primaryDark}`,\n    margin: '.3em 0 0 .3em',\n    background: '#FFFFFF',\n    zIndex: 1,\n    icon: {\n      color: `${primaryDark}`,\n      backgroundColor: '#FFFFFF',\n      border: '1px solid #CC0000',\n      borderLeft: '0',\n      padding: '.5em 20px 0 20px',\n      width: 'auto',\n      height: 'auto'\n    },\n    heading: {\n      color: '#FFFFFF',\n      backgroundColor: `${primaryDark}`\n    },\n    days: {\n      titles: {\n        color: `${primaryDark}`\n      },\n      selected: {\n        backgroundColor: `${activeBg}`\n      },\n      hover: {\n        backgroundColor: `${activeBg}`\n      }\n    }\n  },\n  dateInput: {\n    wrap: {\n      color: '#000000',\n      backgroundColor: '#FFFFFF',\n      border: '1px solid #CC0000',\n      padding: '0',\n      width: '10em',\n      height: 'auto',\n      outline: '1px solid #333',\n      hover: {\n        outline: '2px solid #999'\n      }\n    },\n    input: {\n      fontSize: '1em',\n      backgroundColor: 'transparent',\n      padding: '0 0 0 10px',\n      margin: '0'\n    },\n    inputHint: {\n      fontSize: '.8em',\n      color: '#1E4147',\n      padding: '0 0 0 10px'\n    }\n  }\n}\n","import { format as fnsFormat } from 'date-fns'\n\nexport const formatDate = ({ date, format }) => {\n  try {\n    const [month, day, year] = date.substr(0, 10).split('/')\n    return fnsFormat(new Date(year, (month - 1), day), format)\n  } catch (e) {\n    console.error(e.message)\n  }\n}\n\nexport const dateFromString = ({ date }) => {\n  try {\n    // remove whitespace\n    const dateStr = date.replace(/\\s+/g, '')\n    const [month, day, year] = dateStr.substr(0, 10).split('/')\n    return new Date(year, (month - 1), day)\n  } catch (e) {\n    console.error(e.message)\n  }\n}\n","const isObject = item => (item && typeof item === 'object' && !Array.isArray(item))\r\n\r\nexport const mergeDeep = (target, source) => {\r\n  const output = Object.assign({}, target)\r\n  if (isObject(target) && isObject(source)) {\r\n    Object.keys(source).forEach(key => {\r\n      if (isObject(source[key])) {\r\n        if (!(key in target)) { Object.assign(output, { [key]: source[key] }) } else { output[key] = mergeDeep(target[key], source[key]) }\r\n      } else {\r\n        Object.assign(output, { [key]: source[key] })\r\n      }\r\n    })\r\n  }\r\n  return output\r\n}\n","import styled from 'styled-components'\r\n\r\nexport const App = styled.div`\r\n  text-align: center;\r\n  display: flex;\r\n  \r\n  *:focus {\r\n    outline: 2px solid #d71ef7;\r\n  }\r\n`\r\n\r\nexport const DatePicker = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  cursor: pointer;\r\n  width: ${props => props.theme.dateInput.wrap.width};\r\n  height: ${props => props.theme.dateInput.wrap.height};\r\n  :hover {\r\n    ul {\r\n      outline: ${props => props.theme.dateInput.wrap.hover.outline};\r\n    }\r\n  }\r\n`\r\n\r\nexport const InputLi = styled.li`\r\n  padding: ${props => props.theme.dateInput.wrap.padding};\r\n  border: ${props => props.theme.dateInput.wrap.border};\r\n  background-color: ${props => props.theme.dateInput.wrap.backgroundColor};\r\n  color: ${props => props.theme.dateInput.wrap.color};\r\n  width: ${props => props.theme.dateInput.wrap.width};\r\n  height: ${props => props.theme.dateInput.wrap.height};\r\n`\r\n\r\nexport const IconCalendar = styled.button`\r\n  text-decoration: none;\r\n  padding: ${props => props.theme.calendar.icon.padding};\r\n  border: ${props => props.theme.calendar.icon.border};\r\n  border-left: ${props => props.theme.calendar.icon.borderLeft};\r\n  background-color: ${props => props.theme.calendar.icon.backgroundColor};\r\n  color: ${props => props.theme.calendar.icon.color};\r\n  width: ${props => props.theme.calendar.icon.width};\r\n  height: ${props => props.theme.calendar.icon.height};\r\n`\r\n\r\nexport const CalendarUl = styled.ul`\r\n  display: flex;\r\n  list-style-type: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  outline: ${props => props.theme.dateInput.wrap.outline};\r\n`\r\n\r\nexport const DateInput = styled.input`\r\n  background-color: ${props => props.theme.dateInput.input.backgroundColor};\r\n  border: none;\r\n  font-size: ${props => props.theme.dateInput.input.fontSize};\r\n  padding: ${props => props.theme.dateInput.input.padding};\r\n  margin: ${props => props.theme.dateInput.input.margin};\r\n`\r\n\r\nexport const InputHint = styled.p`\r\n  font-size: ${props => props.theme.dateInput.inputHint.fontSize};\r\n  color: ${props => props.theme.dateInput.inputHint.color};\r\n  padding: ${props => props.theme.dateInput.inputHint.padding};\r\n  margin: 0;\r\n  span {\r\n    opacity: 0;\r\n  }\r\n`\r\n","import { clearWhiteSpace } from './strOps'\r\n\r\nexport const isValidDate = ({ dateRange, str }) => {\r\n  if (!dateRange) {\r\n    return true\r\n  }\r\n\r\n  let isValid = false\r\n  const { min, max } = dateRange\r\n  const strMod = clearWhiteSpace({ str })\r\n\r\n  try {\r\n    const fDate = Date.parse(min)\r\n    const lDate = Date.parse(max)\r\n    const cDate = Date.parse(strMod)\r\n    isValid = (cDate <= lDate && cDate >= fDate)\r\n  } catch (e) {\r\n    console.error(`isValidDate err: ${e.message}`)\r\n  }\r\n\r\n  return isValid\r\n}\r\n","export const clearWhiteSpace = ({ str }) => str.replace(/\\s+/g, '')\r\n","import React, { useState, useEffect } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCalendar } from '@fortawesome/free-solid-svg-icons'\r\nimport { format as fnsFormat } from 'date-fns'\r\n\r\nimport * as S from './styles'\r\nimport { isValidDate } from '../helpers/isValidDate'\r\nimport { dateFromString } from '../helpers/formatDate'\r\nimport { createUid } from '../helpers/uidMap'\r\n\r\nconst KEYCODE = {\r\n  ENTER: 13,\r\n  SPACE: 32,\r\n  BACKSPACE: 8\r\n}\r\n\r\nconst SelectDate = ({\r\n  date,\r\n  format,\r\n  placeholder,\r\n  toggleCalendar,\r\n  hasSelected,\r\n  formatHint,\r\n  handleSelectDate,\r\n  calendarShown,\r\n  dateRange,\r\n  onInvalidDate,\r\n  inputId,\r\n  initialDate,\r\n  ariaLabelFormatHint\r\n}) => {\r\n  const uid = createUid()\r\n  const defaultFormatHintAriaLabel = `format as ${formatHint}`\r\n  const initDate = initialDate ? initialDate : hasSelected ? date : placeholder\r\n  const [dateInput, setDateInput] = useState(initDate)\r\n\r\n  useEffect(() => {\r\n    if (initialDate) {\r\n      onInputChange({\r\n        target: {\r\n          value: initialDate\r\n        }\r\n      })\r\n    }\r\n  }, [initialDate])\r\n\r\n  useEffect(() => {\r\n    if (hasSelected) {\r\n      setDateInput(date)\r\n    }\r\n  }, [date])\r\n\r\n  const checkValue = (str, max) => {\r\n    if (str.charAt(0) !== '0' || str === '00') {\r\n      let num = parseInt(str)\r\n      if (isNaN(num) || num <= 0 || num > max) num = 1\r\n      str = num > parseInt(max.toString().charAt(0)) && num.toString().length === 1 ? '0' + num : num.toString()\r\n    }\r\n    return str\r\n  }\r\n\r\n  const onInputKeyDown = e => {\r\n    if (e.keyCode === KEYCODE.BACKSPACE) {\r\n      const lastChar = dateInput.charAt(dateInput.length - 1)\r\n      if (lastChar === '/') {\r\n        setDateInput(dateInput.substr(0, dateInput.length - 1))\r\n      }\r\n    }\r\n  }\r\n\r\n  const onInputKeyUp = e => {\r\n    if (dateInput.length === 10) {\r\n      submitInputDate({e})\r\n    }\r\n  }\r\n\r\n  const onInputKeyPress = e => {\r\n    const charCode = e.charCode\r\n    if (charCode === KEYCODE.ENTER) {\r\n      submitInputDate({e})\r\n    }\r\n  }\r\n\r\n  const submitInputDate = ({e}) => {\r\n    if (dateInput.length < 10) {\r\n      onInvalidDate({\r\n        message: 'date input invalid',\r\n        details: {\r\n          dateRange,\r\n          dateInput\r\n        }\r\n      })\r\n      e.preventDefault()\r\n      return false\r\n    }\r\n    const isValid = isValidDate({ dateRange, str: dateInput })\r\n\r\n    if (!isValid) {\r\n      onInvalidDate({\r\n        message: 'date outside of range',\r\n        details: {\r\n          dateRange,\r\n          dateInput\r\n        }\r\n      })\r\n      e.preventDefault()\r\n      return false\r\n    }\r\n    // clear errors\r\n    onInvalidDate('')\r\n\r\n    // set selected date\r\n    const date = dateFromString({ date: dateInput })\r\n    handleSelectDate(fnsFormat(date, format))\r\n  }\r\n\r\n  const onIconKeyPress = e => {\r\n    e.preventDefault()\r\n    const charCode = e.charCode\r\n    if (charCode === KEYCODE.ENTER || charCode === KEYCODE.SPACE) {\r\n      toggleCalendar()\r\n    }\r\n  }\r\n\r\n  const clearInputIfEmpty = () => {\r\n    if (dateInput === placeholder) {\r\n      setDateInput('')\r\n    }\r\n  }\r\n\r\n  const onInputChange = e => {\r\n    let inputString = e.target.value\r\n\r\n    const test = /\\D\\/$/.test(inputString)\r\n\r\n    if (test) inputString = inputString.substr(0, inputString.length - 3)\r\n    const values = inputString.split('/').map(v => {\r\n      return v.replace(/\\D/g, '')\r\n    })\r\n    if (values[0]) values[0] = checkValue(values[0], 12)\r\n    if (values[1]) values[1] = checkValue(values[1], 31)\r\n    const output = values.map((v, i) => {\r\n      return v.length === 2 && i < 2 ? v + '/' : v\r\n    })\r\n    const update = output.join('').substr(0, 10)\r\n\r\n    const isValid = (inputString.length === 10) ? isValidDate({ dateRange, str: update }) : false\r\n    const date = dateFromString({ date: update })\r\n\r\n    if (isValid) {\r\n      handleSelectDate(fnsFormat(date, format))\r\n    } else {\r\n      onInvalidDate({\r\n        message: 'date outside of range',\r\n        details: {\r\n          dateRange,\r\n          dateInput: update\r\n        }\r\n      })\r\n    }\r\n\r\n    setDateInput(update)\r\n  }\r\n\r\n  const onInputFocus = e => {\r\n    clearInputIfEmpty()\r\n  }\r\n\r\n  const onInputBlur = e => {\r\n    if (!dateInput) {\r\n      setDateInput(placeholder)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <S.DatePicker\r\n      role='button'\r\n      aria-label='Datepicker'\r\n    >\r\n      <S.CalendarUl>\r\n        <S.InputLi onKeyPress={onInputKeyPress} onKeyUp={onInputKeyUp}>\r\n          <S.DateInput\r\n            id={inputId || 'a11y-date-input'}\r\n            tabIndex='0'\r\n            aria-label='Date Input'\r\n            aria-describedby={`formatHint-${uid}`}\r\n            onClick={onInputFocus}\r\n            onFocus={onInputFocus}\r\n            onBlur={onInputBlur}\r\n            value={dateInput}\r\n            onChange={(e) => onInputChange(e)}\r\n            onKeyDown={(e) => onInputKeyDown(e)}\r\n          />\r\n          <S.InputHint\r\n            aria-label={ariaLabelFormatHint || defaultFormatHintAriaLabel}\r\n            id={`formatHint-${uid}`}\r\n          >\r\n            {formatHint}\r\n          </S.InputHint>\r\n        </S.InputLi>\r\n        <S.IconCalendar\r\n          type='button'\r\n          tabIndex='0'\r\n          aria-label='toggle calendar'\r\n          aria-controls='calendarDisplay'\r\n          onClick={toggleCalendar}\r\n          onKeyPress={onIconKeyPress}\r\n        >\r\n          <FontAwesomeIcon icon={faCalendar} />\r\n        </S.IconCalendar>\r\n      </S.CalendarUl>\r\n    </S.DatePicker>\r\n  )\r\n}\r\nexport default SelectDate\r\n","const uidMap = {}\r\n\r\nexport const createUid = () => Math.random().toString(36).substr(2, 9)","import styled from 'styled-components'\n\nexport const Calendar = styled.div`\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  border: ${props => props.theme.calendar.border};\n  padding: 2px;\n  border-radius: 5px;\n  position: absolute;\n  z-index: ${props => props.theme.calendar.zIndex};\n  margin: ${props => props.theme.calendar.margin};\n  background: ${props => props.theme.calendar.background};\n`\n\nexport const Title = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  font-size: 16px;\n  color: ${props => props.theme.calendar.heading.color};\n  background-color: ${props => props.theme.calendar.heading.backgroundColor};\n  padding: 10px 0;\n  border: 1px solid black;\n`\n\nexport const Icons = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nexport const IconWrap = styled.button`\n  padding: 0 10px;\n  cursor: pointer;\n\n  background: none;\n  border: none;\n\n  color: #FFFFFF;\n\n  &active, &focus {\n    background: none;\n    border: none;\n    //outline: none;\n  }\n`\n\nexport const Month = styled.div`\n  padding: 0 15px;\n`\n\nexport const DaysOfWeek = styled.th`\n  height: 30px;\n  color: ${props => props.theme.calendar.days.titles.color};\n`\n\nexport const Cell = styled.td`\n  cursor: ${props => props.$empty ? 'default' : 'pointer'};\n  pointer-events: ${props => props.$empty ? 'none' : 'autho'};\n  border: 1px solid black;\n  border-radius: 3px;\n  height: 30px;\n  font-family: arial, helvetica, sans-serif;\n  font-size: 16px;\n\n  background-color: ${props => props.$selected ? props.theme.calendar.days.selected.backgroundColor : 'inherit'};\n\n  :hover {\n    background-color: ${props => props.theme.calendar.days.hover.backgroundColor};\n  }\n\n  button, button:active, button:focus {\n    background: none;\n    border: none;\n    //outline: none;\n  }\n\n`\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  format as fnsFormat,\r\n  startOfMonth,\r\n  getDaysInMonth,\r\n  getWeeksInMonth,\r\n  getDay,\r\n  getMonth,\r\n  getYear,\r\n  setDate,\r\n  getDate,\r\n  isEqual,\r\n  toDate\r\n} from 'date-fns'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAngleLeft, faAngleRight, faAngleDoubleLeft, faAngleDoubleRight } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport * as S from './Calendar.styles'\r\nimport { dateFromString } from '../helpers/formatDate'\r\nimport makeKeyControl from '../helpers/calendar/keyControl'\r\n\r\nconst ariaDays = [\r\n  'Sunday',\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday'\r\n]\r\n\r\nconst ariaMonths = [\r\n  'January', \r\n  'February', \r\n  'March', \r\n  'April', \r\n  'May', \r\n  'June', \r\n  'July', \r\n  'August', \r\n  'September', \r\n  'October', \r\n  'November', \r\n  'December'\r\n]\r\n\r\nconst Calendar = ({\r\n  date,\r\n  format,\r\n  handleSelectDate,\r\n  closeCalendar,\r\n  dateRange,\r\n  calendarShown\r\n}) => {\r\n  const [selectedDate, setSelectedDate] = useState(dateFromString({ date }))\r\n  const [focusDay, setFocusDay] = useState({\r\n    focus: true,\r\n    previousDate: ''\r\n  })\r\n  const keyControl = makeKeyControl({\r\n    format,\r\n    dateRange,\r\n    selectedDate,\r\n    setSelectedDate,\r\n    setFocusDay\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (calendarShown && focusDay.focus) {\r\n      setFocusDay({ focus: false })\r\n      keyControl.focusSelectedDate({ previousDate: focusDay.previousDate })\r\n    }\r\n  }, [calendarShown, focusDay])\r\n\r\n  const previousYearKeyPress = e => {\r\n    const keyCode = e.keyCode\r\n    const control = e.shiftKey\r\n\r\n    if (keyCode === 13 || keyCode === 32) {\r\n      e.preventDefault()\r\n      keyControl.setPreviousYear()\r\n    } else if (keyCode === 9) { // TAB\r\n      if (control) {\r\n        // shift held\r\n        e.preventDefault()\r\n        if (document.activeElement === document.getElementById('previousYear')) {\r\n          keyControl.focusSelectedDate({ previousDate: '' })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // @TODO move to keyControl + unit tests\r\n  const handleDayKeyPress = e => {\r\n    e.preventDefault()\r\n    const keyCode = e.keyCode\r\n    const control = e.shiftKey\r\n    switch (keyCode) {\r\n      case 9: // TAB\r\n        if (!control) {\r\n          document.getElementById('previousYear').focus()\r\n          e.stopPropagation()\r\n          e.preventDefault()\r\n        }\r\n        break\r\n      case 13: // Enter\r\n        handleSelectDate(fnsFormat(selectedDate, format))\r\n        return\r\n      case 27: // Esc\r\n        closeCalendar()\r\n        return\r\n      case 32: // Space\r\n        handleSelectDate(fnsFormat(selectedDate, format))\r\n        return\r\n      case 33: // Page Up\r\n        control ? keyControl.setDatePreviousYear() : keyControl.setDatePreviousMonth()\r\n        return\r\n      case 34: // Page Down\r\n        control ? keyControl.setDateNextYear() : keyControl.setDateNextMonth()\r\n        return\r\n      case 35: // End\r\n        keyControl.setMonthEnd()\r\n        return\r\n      case 36: // Home\r\n        keyControl.setMonthStart()\r\n        return\r\n      case 37: // Left\r\n        keyControl.setPreviousDay()\r\n        return\r\n      case 38: // Up\r\n        keyControl.setPreviousWeek()\r\n        return\r\n      case 39: // Right\r\n        keyControl.setNextDay()\r\n        return\r\n      case 40: // Down\r\n        keyControl.setNextWeek()\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n  const handleDateSelection = (date) => {\r\n    const dateString = fnsFormat(date, format)\r\n    handleSelectDate(dateString)\r\n  }\r\n\r\n  // @TODO refactor this, extract + unit test\r\n  const makeWeek = ({ selectedDate, weekNum, daysInMonth, startWeekday }) => {\r\n    const curYear = toDate(new Date(selectedDate)).getFullYear()\r\n    const curMonth = toDate(new Date(selectedDate)).getMonth() + 1\r\n    let minDay = 0\r\n    let maxDay = 0\r\n    let minMonth = 0\r\n    let maxMonth = 0\r\n    let minYear = 0\r\n    let maxYear = 0\r\n\r\n    const [miMonth, miDay, miYear] = dateRange ? dateRange.min.split('/') : ['01', '01', '0000']\r\n    const [maMonth, maDay, maYear] = dateRange ? dateRange.max.split('/') : ['01', '01', '9999']\r\n    minDay = parseInt(miDay)\r\n    maxDay = parseInt(maDay) + 1\r\n    minMonth = parseInt(miMonth)\r\n    maxMonth = parseInt(maMonth)\r\n    minYear = parseInt(miYear)\r\n    maxYear = parseInt(maYear)\r\n\r\n    const inMinYear = curYear === minYear\r\n    const inMaxYear = curYear === maxYear\r\n    const yearValid = curYear >= minYear && curYear <= maxYear\r\n\r\n    const returnArr = []\r\n    let dayNum = weekNum === 0 ? 1 : (weekNum * 7) - startWeekday + 1\r\n    for (let i = 0; i < 7; i++) {\r\n      let minDayValid = true\r\n      let maxDayValid = true\r\n      const inMinMonth = curMonth === minMonth\r\n      const inMaxMonth = curMonth === maxMonth\r\n\r\n      if (inMinMonth && yearValid) {\r\n        minDayValid = dayNum > minDay\r\n      }\r\n      if (inMaxMonth && yearValid) {\r\n        maxDayValid = dayNum < maxDay\r\n      }\r\n      let validDay = true\r\n\r\n      if (curMonth < minMonth && inMinYear) {\r\n        validDay = false\r\n      } else if (curMonth > maxMonth && inMaxYear) {\r\n        validDay = false\r\n      }\r\n\r\n      if (curYear < minYear || curYear > maxYear) {\r\n        validDay = false\r\n      }\r\n\r\n      if (weekNum === 0) {\r\n        if (i < startWeekday) {\r\n          returnArr.push(null)\r\n          continue\r\n        }\r\n      }\r\n      if (dayNum <= daysInMonth) {\r\n        if (validDay) {\r\n          returnArr.push(setDate(selectedDate, dayNum))\r\n          dayNum++\r\n        } else {\r\n          returnArr.push(null)\r\n          dayNum++\r\n        }\r\n      } else {\r\n        returnArr.push(null)\r\n      }\r\n    }\r\n    return returnArr\r\n  }\r\n\r\n  const getWrittenDay = ({ day }) => {\r\n    const dateString = fnsFormat(day, format)\r\n    const dateObj = new Date(dateString)\r\n    const dayIdx = getDay(dateObj)\r\n    const monthIdx = getMonth(dateObj)\r\n    const year = getYear(dateObj)\r\n\r\n    const writtenDay = ariaDays[dayIdx]\r\n    const writtenMonth = ariaMonths[monthIdx]\r\n    return `${writtenDay} ${writtenMonth} ${year}`\r\n  }\r\n\r\n  // @TODO same refactor somewhere\r\n  const generateMonth = () => {\r\n    const daysInMonth = getDaysInMonth(selectedDate)\r\n    const weeksInMonth = getWeeksInMonth(selectedDate)\r\n    const startWeekday = getDay(startOfMonth(selectedDate))\r\n\r\n    const weeks = []\r\n    for (let i = 0; i < weeksInMonth; i++) {\r\n      weeks.push(makeWeek({ selectedDate, weekNum: i, daysInMonth, startWeekday }))\r\n    }\r\n\r\n    return weeks\r\n  }\r\n\r\n  const onBlur = e => {\r\n    //@Recall was trying to close calendar on clicking off of it ... getting there\r\n    // leaving this as its not needed atm\r\n    //console.log('blur')\r\n    // if user is not focusing on a calendar button, they have clicked outside the calendar\r\n    // const activeFocus = document.activeElement['data-focus']\r\n    // console.log('activeFocus:', document.activeElement)\r\n    // if (!activeFocus) {\r\n    //   console.log('hide ui')\r\n    // }\r\n\r\n  }\r\n\r\n  return (\r\n    <S.Calendar \r\n      id='calendarDisplay' \r\n      aria-expanded={calendarShown}\r\n      onBlur={onBlur}\r\n    >\r\n      <S.Title>\r\n        <S.Icons>\r\n          <S.IconWrap\r\n            type='button'\r\n            id='previousYear'\r\n            data-focus='cal'\r\n            aria-label='previous year'\r\n            onClick={keyControl.setPreviousYear}\r\n            onKeyDown={(e) => previousYearKeyPress(e)}\r\n          >\r\n            <FontAwesomeIcon icon={faAngleDoubleLeft} />\r\n          </S.IconWrap>\r\n          <S.IconWrap\r\n            type='button'\r\n            data-focus='cal'\r\n            aria-label='previous month'\r\n            onClick={keyControl.setPreviousMonth}\r\n          >\r\n            <FontAwesomeIcon icon={faAngleLeft} />\r\n          </S.IconWrap>\r\n        </S.Icons>\r\n        <S.Month role='heading'>\r\n          <b>\r\n            {fnsFormat(selectedDate, 'MMMM yyyy')}\r\n          </b>\r\n        </S.Month>\r\n        <S.Icons>\r\n          <S.IconWrap\r\n            type='button'\r\n            data-focus='cal'\r\n            aria-label='next month'\r\n            onClick={keyControl.setNextMonth}\r\n            onKeyUp={(e) => keyControl.handleKeyPress({ e, callback: keyControl.setNextMonth })}\r\n          >\r\n            <FontAwesomeIcon icon={faAngleRight} />\r\n          </S.IconWrap>\r\n          <S.IconWrap\r\n            type='button'\r\n            data-focus='cal'\r\n            aria-label='next year'\r\n            onClick={keyControl.setNextYear}\r\n            onKeyUp={(e) => keyControl.handleKeyPress({ e, callback: keyControl.setNextYear })}\r\n          >\r\n            <FontAwesomeIcon icon={faAngleDoubleRight} />\r\n          </S.IconWrap>\r\n        </S.Icons>\r\n      </S.Title>\r\n      <table\r\n        role='grid'\r\n        aria-label='select day via arrow keys'\r\n      >\r\n        <thead>\r\n          <tr role='row'>\r\n            <S.DaysOfWeek role='columnheader' aria-label='Sunday'><abbr title='Sunday'>Su</abbr></S.DaysOfWeek>\r\n            <S.DaysOfWeek role='columnheader' aria-label='Monday'><abbr title='Monday'>Mo</abbr></S.DaysOfWeek>\r\n            <S.DaysOfWeek role='columnheader' aria-label='Tuesday'><abbr title='Tuesday'>Tu</abbr></S.DaysOfWeek>\r\n            <S.DaysOfWeek role='columnheader' aria-label='Wednesday'><abbr title='Wednesday'>We</abbr></S.DaysOfWeek>\r\n            <S.DaysOfWeek role='columnheader' aria-label='Thursday'><abbr title='Thursday'>Th</abbr></S.DaysOfWeek>\r\n            <S.DaysOfWeek role='columnheader' aria-label='Friday'><abbr title='Friday'>Fr</abbr></S.DaysOfWeek>\r\n            <S.DaysOfWeek role='columnheader' aria-label='Saturday'><abbr title='Saturday'>Sa</abbr></S.DaysOfWeek>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {generateMonth().map((week, i) => (\r\n            <tr className='week' key={`week-${i}`} role='row'>\r\n              {week.map((day, i) => (day\r\n                ? <S.Cell\r\n                    id={`${getDate(day)} ${getWrittenDay({ day })}`}\r\n                    aria-selected={isEqual(selectedDate, day)}\r\n                    $selected={isEqual(selectedDate, day)}\r\n                    key={`day-cell-${i}`}\r\n                    onClick={() => handleDateSelection(day)}\r\n                  >\r\n                  <button\r\n                    type='button'\r\n                    id={fnsFormat(day, format)}\r\n                    data-focus='cal'\r\n                    aria-label={`${getDate(day)} ${getWrittenDay({ day })}`}\r\n                    onKeyDown={handleDayKeyPress}\r\n                    tabIndex={`${isEqual(selectedDate, day) ? '0' : '-1'}`}\r\n                  >\r\n                    {getDate(day)}\r\n                  </button>\r\n                </S.Cell>\r\n                : <S.Cell $empty key={`day-cell-${i}`}>&nbsp;</S.Cell>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </S.Calendar>\r\n  )\r\n}\r\nexport default Calendar\r\n","import {\r\n  startOfMonth,\r\n  subMonths,\r\n  addMonths,\r\n  subYears,\r\n  addYears,\r\n  endOfMonth,\r\n  subWeeks,\r\n  addWeeks,\r\n  subDays,\r\n  addDays,\r\n  getYear,\r\n  getMonth,\r\n  format as fnsFormat\r\n} from 'date-fns'\r\n\r\n// @Todo need actual unit tests here ++ big refactor\r\n\r\nconst makeKeyControl = ({\r\n  format,\r\n  dateRange,\r\n  selectedDate,\r\n  setSelectedDate,\r\n  setFocusDay\r\n}) => {\r\n  const maxRangeArr = dateRange ? dateRange.max.split('/') : ['01', '01', '9999']\r\n  const minRangeArr = dateRange ? dateRange.min.split('/') : ['01', '01', '0000']\r\n  const maxYear = parseInt(maxRangeArr[2])\r\n  const minYear = parseInt(minRangeArr[2])\r\n  const maxMonth = parseInt(maxRangeArr[0])\r\n  const minMonth = parseInt(minRangeArr[0])\r\n\r\n  const getButtonFromDate = ({ dateStr }) => document.getElementById(dateStr)\r\n  const focusSelectedDate = ({ previousDate }) => {\r\n    if (previousDate) {\r\n      const prevDate = getButtonFromDate({ dateStr: fnsFormat(previousDate, format) })\r\n      prevDate && prevDate.setAttribute('tabindex', '-1')\r\n    }\r\n    const selectedDayButton = getButtonFromDate({ dateStr: fnsFormat(selectedDate, format) })\r\n    if (selectedDayButton) {\r\n      selectedDayButton.focus()\r\n      selectedDayButton.setAttribute('tabindex', '0')\r\n    }\r\n  }\r\n\r\n  const handleKeyPress = ({ e, callback }) => {\r\n    const charCode = e.charCode\r\n    if (charCode === 13 || charCode === 32) {\r\n      callback()\r\n    }\r\n  }\r\n\r\n  const setPreviousMonth = () => {\r\n    const previousMonth = subMonths(selectedDate, 1)\r\n    const previousYearVal = getYear(previousMonth)\r\n    const previousMonthVal = getMonth(previousMonth) + 1\r\n    const startOfPrevMonthVal = startOfMonth(previousMonth)\r\n\r\n    if (previousYearVal === minYear) {\r\n      if (previousMonthVal >= minMonth) {\r\n        setSelectedDate(startOfPrevMonthVal)\r\n      }\r\n    } else if (previousYearVal >= minYear) {\r\n      setSelectedDate(startOfPrevMonthVal)\r\n    }\r\n  }\r\n\r\n  const setNextMonth = () => {\r\n    const nextMonth = addMonths(selectedDate, 1)\r\n    const nextYearVal = getYear(nextMonth)\r\n    const nextMonthVal = getMonth(nextMonth) + 1\r\n    const startOfNextMonthVal = startOfMonth(nextMonth)\r\n\r\n    if (nextYearVal === maxYear) {\r\n      if (nextMonthVal <= maxMonth) {\r\n        setSelectedDate(startOfNextMonthVal)\r\n      }\r\n    } else if (nextYearVal <= maxYear) {\r\n      setSelectedDate(startOfNextMonthVal)\r\n    }\r\n  }\r\n\r\n  const setPreviousYear = () => {\r\n    const previousYear = subYears(selectedDate, 1)\r\n    const previousYearVal = getYear(previousYear)\r\n    const previousMonth = getMonth(previousYear)\r\n    if (previousYearVal > minYear) {\r\n      setSelectedDate(startOfMonth(previousYear))\r\n    } else if (previousYearVal === minYear) {\r\n      if (previousMonth <= minMonth) {\r\n        setSelectedDate(new Date(`${minMonth}/01/${minYear}`))\r\n      } else {\r\n        setSelectedDate(startOfMonth(previousYear))\r\n      }\r\n    }\r\n  }\r\n\r\n  const setNextYear = () => {\r\n    const nextYear = addYears(selectedDate, 1)\r\n    const nextYearVal = getYear(nextYear)\r\n    if (nextYearVal <= maxYear) {\r\n      setSelectedDate(startOfMonth(nextYear))\r\n    }\r\n  }\r\n\r\n  const setPreviousDay = () => {\r\n    const previousDay = subDays(selectedDate, 1)\r\n    const nextYearVal = getYear(previousDay)\r\n    const nextMonthVal = getMonth(previousDay) + 1\r\n    if (nextYearVal === minYear) {\r\n      if (nextMonthVal >= minMonth) {\r\n        setSelectedDate(previousDay)\r\n        setFocusDay({ focus: true, previousDate: selectedDate })\r\n      }\r\n    } else if (nextYearVal > minYear) {\r\n      setSelectedDate(previousDay)\r\n      setFocusDay({ focus: true, previousDate: selectedDate })\r\n    }\r\n  }\r\n\r\n  const setNextDay = () => {\r\n    const nextDay = addDays(selectedDate, 1)\r\n    const nextYearVal = getYear(nextDay)\r\n    const nextMonthVal = getMonth(nextDay) + 1\r\n    if (nextYearVal === maxYear) {\r\n      if (nextMonthVal <= maxMonth) {\r\n        setSelectedDate(nextDay)\r\n        setFocusDay({ focus: true, previousDate: selectedDate })\r\n      }\r\n    } else if (nextYearVal < maxYear) {\r\n      setSelectedDate(nextDay)\r\n      setFocusDay({ focus: true, previousDate: selectedDate })\r\n    }\r\n  }\r\n\r\n  const setPreviousWeek = () => {\r\n    const previousWeek = subWeeks(selectedDate, 1)\r\n    const nextYearVal = getYear(previousWeek)\r\n    const nextMonthVal = getMonth(previousWeek) + 1\r\n    if (nextYearVal > minYear) {\r\n      setSelectedDate(previousWeek)\r\n      setFocusDay({ focus: true, previousDate: selectedDate })\r\n    } else if (nextYearVal === minYear) {\r\n      if (nextMonthVal >= minMonth) {\r\n        setSelectedDate(previousWeek)\r\n        setFocusDay({ focus: true, previousDate: selectedDate })\r\n      }\r\n    }\r\n  }\r\n\r\n  const setNextWeek = () => {\r\n    const nextWeek = addWeeks(selectedDate, 1)\r\n    const nextYearVal = getYear(nextWeek)\r\n    const nextMonthVal = getMonth(nextWeek) + 1\r\n    if (nextYearVal === maxYear) {\r\n      if (nextMonthVal <= maxMonth) {\r\n        setSelectedDate(nextWeek)\r\n        setFocusDay({ focus: true, previousDate: selectedDate })\r\n      }\r\n    } else if (nextYearVal < maxYear) {\r\n      setSelectedDate(nextWeek)\r\n      setFocusDay({ focus: true, previousDate: selectedDate })\r\n    }\r\n  }\r\n\r\n  const setDatePreviousMonth = () => {\r\n    const previousMonth = subMonths(selectedDate, 1)\r\n    const previousYearVal = getYear(previousMonth)\r\n    const previousMonthVal = getMonth(previousMonth) + 1\r\n    const subMonth = subMonths(selectedDate, 1)\r\n\r\n    if (previousYearVal === minYear) {\r\n      if (previousMonthVal >= minMonth) {\r\n        setSelectedDate(subMonth)\r\n      }\r\n    } else if (previousYearVal >= minYear) {\r\n      setSelectedDate(subMonth)\r\n    }\r\n  }\r\n\r\n  const setDateNextMonth = () => {\r\n    const nextMonth = addMonths(selectedDate, 1)\r\n    const nextYearVal = getYear(nextMonth)\r\n    const nextMonthVal = getMonth(nextMonth) + 1\r\n    const addMonth = addMonths(selectedDate, 1)\r\n\r\n    if (nextYearVal === maxYear) {\r\n      if (nextMonthVal <= maxMonth) {\r\n        setSelectedDate(addMonth)\r\n      }\r\n    } else if (nextYearVal <= maxYear) {\r\n      setSelectedDate(addMonth)\r\n    }\r\n  }\r\n\r\n  const setDatePreviousYear = () => {\r\n    const previousYear = subYears(selectedDate, 1)\r\n    const previousYearVal = getYear(previousYear)\r\n    const subYear = subYears(selectedDate, 1)\r\n\r\n    if (previousYearVal >= minYear) {\r\n      setSelectedDate(subYear)\r\n    }\r\n  }\r\n\r\n  const setDateNextYear = () => {\r\n    const nextYear = addYears(selectedDate, 1)\r\n    const nextYearVal = getYear(nextYear)\r\n    const addYear = addYears(selectedDate, 1)\r\n    if (nextYearVal <= maxYear) {\r\n      setSelectedDate(addYear)\r\n    }\r\n  }\r\n\r\n  const setMonthStart = () => {\r\n    setSelectedDate(startOfMonth(selectedDate))\r\n  }\r\n\r\n  const setMonthEnd = () => {\r\n    setSelectedDate(endOfMonth(selectedDate))\r\n  }\r\n\r\n  return Object.freeze({\r\n    focusSelectedDate,\r\n    handleKeyPress,\r\n    setPreviousMonth,\r\n    setNextMonth,\r\n    setPreviousYear,\r\n    setNextYear,\r\n    setPreviousDay,\r\n    setNextDay,\r\n    setPreviousWeek,\r\n    setNextWeek,\r\n    setDatePreviousMonth,\r\n    setDateNextMonth,\r\n    setDatePreviousYear,\r\n    setDateNextYear,\r\n    setMonthStart,\r\n    setMonthEnd\r\n  })\r\n}\r\n\r\nexport default makeKeyControl\r\n","import React, { useState } from 'react'\nimport { format as fnsFormat, compareAsc } from 'date-fns'\nimport { ThemeProvider } from 'styled-components'\n\nimport { defaultTheme } from './components/defaultTheme'\nimport { formatDate } from './helpers/formatDate'\nimport { mergeDeep } from './helpers/mergeDeep'\nimport { getDefaultDate } from './helpers/calendar/defaultDate'\nimport SelectDate from './components/SelectDate'\nimport Calendar from './components/Calendar'\n\nexport const DatePicker = ({\n  theme,\n  format,\n  placeholder,\n  formatHint,\n  onSelect,\n  dateRange,\n  onInvalidDate,\n  inputId,\n  initialDate,\n  ariaLabelFormatHint\n}) => {\n  \n  let defaultDate = getDefaultDate({dateRange})\n\n  const [showCalendar, setShowCalendar] = useState(false)\n  const [date, setDate] = useState(fnsFormat(new Date(defaultDate), format))\n  const [hasSelected, setHasSelected] = useState(false)\n\n  const toggleCalendar = (e) => {\n    setShowCalendar(!showCalendar)\n  }\n  const handleSelectDate = (date) => {\n    const dateFormatted = formatDate({ date, format })\n    setDate(dateFormatted)\n    setShowCalendar(false)\n    onSelect(dateFormatted)\n    if (!hasSelected) {\n      setHasSelected(true)\n    }\n  }\n  const closeCalendar = () => {\n    setShowCalendar(false)\n  }\n\n  const themeMod = theme === 'none' ? {} : mergeDeep(defaultTheme, theme)\n\n  return (\n    <ThemeProvider theme={themeMod}>\n      <SelectDate\n        date={date}\n        format={format}\n        toggleCalendar={toggleCalendar}\n        placeholder={placeholder}\n        hasSelected={hasSelected}\n        formatHint={formatHint}\n        calendarShown={showCalendar}\n        handleSelectDate={handleSelectDate}\n        dateRange={dateRange}\n        onInvalidDate={onInvalidDate}\n        inputId={inputId}\n        initialDate={initialDate}\n        ariaLabelFormatHint={ariaLabelFormatHint}\n      />\n      {showCalendar && (\n        <Calendar\n          format={format}\n          date={date}\n          handleSelectDate={handleSelectDate}\n          closeCalendar={closeCalendar}\n          dateRange={dateRange}\n          calendarShown={showCalendar}\n        />\n      )}\n    </ThemeProvider>\n  )\n}\n","import { compareAsc } from \"date-fns\"\r\n\r\nexport const getDefaultDate = ({dateRange}) => {\r\n  let returnDate = new Date()\r\n  try {\r\n    if (dateRange) {\r\n      const compareCurrentAndMaxDate = compareAsc(new Date(), new Date(dateRange.max))\r\n      if ( compareCurrentAndMaxDate === 1 ) {\r\n        // cur date is after max\r\n        returnDate = new Date(dateRange.max)\r\n      } \r\n    }\r\n  } catch(e) {\r\n    console.error(e.message)\r\n  }\r\n  return returnDate\r\n}","import React, { useState, useEffect } from 'react'\nimport './app.css'\n\nimport { DatePicker } from 'simplifa11y'\n\nconst App = () => {\n  const [dateString, setDateString] = useState('')\n  const [initialDate, setInitialDate] = useState('')\n  const [error, setError] = useState('')\n\n  useEffect(() => {\n    setTimeout(() => {\n      setInitialDate('03/03/2003')\n    }, 1000)\n  }, [])\n\n  const theme = {\n    calendar: {\n      zIndex: '2'\n    },\n    dateInput: {\n      wrap: {\n        outline: '2px solid yellow',\n        hover: {\n          outline: '5px solid green'\n        }\n      }\n    }\n  }\n\n  const onInvalidDate = (e) => {\n    setError(e)\n  }\n\n  return (\n    <>\n    <div className='bigSpace' />\n      {error && (\n        <>\n          <p>error: {error.message}</p>\n          <p>dateInput: {error.details.dateInput}</p>\n          <p>dateRange max: {error.details.dateRange.max}</p>\n          <p>dateRange min: {error.details.dateRange.min}</p>\n        </>\n      )}\n      <form onSubmit={e => e.preventDefault()}>\n        <DatePicker\n          inputId='test...'\n          theme={theme}\n          format='MM/dd/yyyy'\n          placeholder='Enter a Date'\n          formatHint='MM DD YYYY'\n          onSelect={setDateString}\n          dateRange={{\n            min: '08/02/2002',\n            max: '08/31/2008'\n          }}\n          onInvalidDate={onInvalidDate}\n          initialDate={initialDate}\n        />\n\n        <p>dateString is: [{dateString}]</p>\n        <p>initialDate is: [{initialDate}]</p>\n\n        <input\n          style={{\n            position: 'absolute'\n          }}\n          type='text'\n          value='test z-index'\n          onChange={() => {}}\n        />\n\n        <p className='section'>no initialDate</p>\n        \n        <DatePicker\n          inputId='test...'\n          theme={theme}\n          format='MM/dd/yyyy'\n          placeholder='Enter a Date'\n          formatHint='MM DD YYYY'\n          onSelect={setDateString}\n          dateRange={{\n            min: '08/02/2002',\n            max: '08/31/2044'\n          }}\n          onInvalidDate={onInvalidDate}\n        />\n\n        <p className='section'>no dateRange</p>\n        \n        <DatePicker\n          inputId='test...'\n          theme={theme}\n          format='MM/dd/yyyy'\n          placeholder='Enter a Date'\n          formatHint='MM DD YYYY'\n          onSelect={setDateString}\n          onInvalidDate={onInvalidDate}\n          ariaLabelFormatHint=\"format into a pipe dream\"\n        />\n\n        <p>dateString is: {dateString}</p>\n      </form>\n\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}